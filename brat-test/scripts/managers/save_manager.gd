extends Node

const SAVE_PATH = "user://savegame.json"

func save_game(player_data: Dictionary, gang_members: Array, quest_system_data: Dictionary = {}) -> bool:
	# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞–π–æ–Ω–∞—Ö
	var districts_data = {}
	var districts_system = get_node_or_null("/root/DistrictsSystem")
	if districts_system:
		districts_data = {
			"districts": districts_system.districts.duplicate(true),
			"rival_gangs": districts_system.rival_gangs.duplicate(true)
		}
	
	var save_data = {
		"version": "1.1",  # –û–±–Ω–æ–≤–∏–ª–∏ –≤–µ—Ä—Å–∏—é
		"timestamp": Time.get_datetime_string_from_system(),
		"player_data": player_data.duplicate(true),
		"gang_members": gang_members.duplicate(true),
		"quest_system": quest_system_data.duplicate(true),
		"districts": districts_data  # –ù–û–í–û–ï: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤
	}
	
	var save_file = FileAccess.open(SAVE_PATH, FileAccess.WRITE)
	if save_file == null:
		print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")
		return false
	
	var json_string = JSON.stringify(save_data, "\t")
	save_file.store_string(json_string)
	save_file.close()
	
	print("‚úÖ –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: " + SAVE_PATH)
	print("üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ " + str(districts_data.get("districts", {}).size()) + " —Ä–∞–π–æ–Ω–∞—Ö")
	return true

func load_game() -> Dictionary:
	if not FileAccess.file_exists(SAVE_PATH):
		print("‚ö†Ô∏è –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
		return {}
	
	var save_file = FileAccess.open(SAVE_PATH, FileAccess.READ)
	if save_file == null:
		print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")
		return {}
	
	var json_string = save_file.get_as_text()
	save_file.close()
	
	var json = JSON.new()
	var parse_result = json.parse(json_string)
	
	if parse_result != OK:
		print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON!")
		return {}
	
	var save_data = json.data
	
	# –ù–û–í–û–ï: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∞–π–æ–Ω–∞—Ö
	if save_data.has("districts"):
		var districts_system = get_node_or_null("/root/DistrictsSystem")
		if districts_system:
			var districts_data = save_data["districts"]
			
			if districts_data.has("districts"):
				districts_system.districts = districts_data["districts"].duplicate(true)
				print("üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ " + str(districts_system.districts.size()) + " —Ä–∞–π–æ–Ω–∞—Ö")
			
			if districts_data.has("rival_gangs"):
				districts_system.rival_gangs = districts_data["rival_gangs"].duplicate(true)
				print("üè¥ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ " + str(districts_system.rival_gangs.size()) + " —Å–æ–ø–µ—Ä–Ω–∏—á–∞—é—â–∏—Ö –±–∞–Ω–¥–∞—Ö")
	
	print("‚úÖ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: " + str(save_data.get("timestamp", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")))
	return save_data

func has_save() -> bool:
	return FileAccess.file_exists(SAVE_PATH)

func delete_save() -> bool:
	if FileAccess.file_exists(SAVE_PATH):
		DirAccess.remove_absolute(SAVE_PATH)
		print("üóëÔ∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
		return true
	return false

func get_save_info() -> Dictionary:
	if not has_save():
		return {}
	
	var save_data = load_game()
	if save_data.is_empty():
		return {}
	
	# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ —Ä–∞–π–æ–Ω—ã
	var controlled_districts = 0
	if save_data.has("districts") and save_data["districts"].has("districts"):
		for district_name in save_data["districts"]["districts"]:
			var district = save_data["districts"]["districts"][district_name]
			if district.get("owner", "") == "–ò–≥—Ä–æ–∫":
				controlled_districts += 1
	
	return {
		"timestamp": save_data.get("timestamp", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"),
		"version": save_data.get("version", "1.0"),
		"player_name": save_data.get("player_data", {}).get("name", "–ò–≥—Ä–æ–∫"),
		"balance": save_data.get("player_data", {}).get("balance", 0),
		"reputation": save_data.get("player_data", {}).get("reputation", 0),
		"gang_size": save_data.get("gang_members", []).size(),
		"controlled_districts": controlled_districts  # –ù–û–í–û–ï
	}

# –ù–û–í–û–ï: –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ N –º–∏–Ω—É—Ç
var autosave_timer: Timer = null
var autosave_interval: float = 300.0  # 5 –º–∏–Ω—É—Ç

func enable_autosave(interval: float = 300.0):
	autosave_interval = interval
	
	if autosave_timer:
		autosave_timer.queue_free()
	
	autosave_timer = Timer.new()
	autosave_timer.wait_time = autosave_interval
	autosave_timer.one_shot = false
	autosave_timer.timeout.connect(_on_autosave_timeout)
	add_child(autosave_timer)
	autosave_timer.start()
	
	print("üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ: –∫–∞–∂–¥—ã–µ " + str(interval / 60.0) + " –º–∏–Ω.")

func disable_autosave():
	if autosave_timer:
		autosave_timer.stop()
		autosave_timer.queue_free()
		autosave_timer = null
	print("üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ")

func _on_autosave_timeout():
	print("üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...")
	# –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç main.gd
	# –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª –∏–ª–∏ –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ main
	# –ü—Ä–∏–º–µ—Ä –±—É–¥–µ—Ç –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

# –ù–û–í–û–ï: –≠–∫—Å–ø–æ—Ä—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
func export_save_to_text(path: String = "user://savegame_readable.txt") -> bool:
	var save_data = load_game()
	if save_data.is_empty():
		return false
	
	var text_file = FileAccess.open(path, FileAccess.WRITE)
	if text_file == null:
		return false
	
	text_file.store_string("=== –°–û–•–†–ê–ù–ï–ù–ò–ï –ò–ì–†–´ '–ë–†–ê–¢ –¢–ï–°–¢ 1' ===\n\n")
	text_file.store_string("–í–µ—Ä—Å–∏—è: " + str(save_data.get("version", "1.0")) + "\n")
	text_file.store_string("–í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + str(save_data.get("timestamp", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")) + "\n\n")
	
	text_file.store_string("--- –î–ê–ù–ù–´–ï –ò–ì–†–û–ö–ê ---\n")
	var player_data = save_data.get("player_data", {})
	text_file.store_string("–ë–∞–ª–∞–Ω—Å: " + str(player_data.get("balance", 0)) + " —Ä—É–±.\n")
	text_file.store_string("–ó–¥–æ—Ä–æ–≤—å–µ: " + str(player_data.get("health", 0)) + "\n")
	text_file.store_string("–†–µ–ø—É—Ç–∞—Ü–∏—è: " + str(player_data.get("reputation", 0)) + "\n")
	text_file.store_string("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: " + str(player_data.get("inventory", [])) + "\n\n")
	
	text_file.store_string("--- –ë–ê–ù–î–ê ---\n")
	var gang = save_data.get("gang_members", [])
	text_file.store_string("–†–∞–∑–º–µ—Ä –±–∞–Ω–¥—ã: " + str(gang.size()) + "\n\n")
	
	if save_data.has("districts"):
		text_file.store_string("--- –†–ê–ô–û–ù–´ ---\n")
		var districts = save_data["districts"].get("districts", {})
		for district_name in districts:
			var district = districts[district_name]
			text_file.store_string("\n" + district_name + ":\n")
			text_file.store_string("  –í–ª–∞–¥–µ–ª–µ—Ü: " + str(district.get("owner", "")) + "\n")
			text_file.store_string("  –í–ª–∏—è–Ω–∏–µ –∏–≥—Ä–æ–∫–∞: " + str(district.get("influence", {}).get("–ò–≥—Ä–æ–∫", 0)) + "%\n")
	
	text_file.close()
	print("üìÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: " + path)
	return true
